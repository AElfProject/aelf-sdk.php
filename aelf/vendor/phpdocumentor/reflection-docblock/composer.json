<?php declare(strict_types=1);

/**
 * PHP Implementation of MurmurHash3
 *
 * @author Stefano Azzolini (lastguest@gmail.com)
 * @see https://github.com/lastguest/murmurhash-php
 * @author Gary Court (gary.court@gmail.com)
 * @see http://github.com/garycourt/murmurhash-js
 * @author Austin Appleby (aappleby@gmail.com)
 * @see http://sites.google.com/site/murmurhash/
 *
 */

namespace lastguest;

class Murmur {

  /**
   * @param  string $key   Text to hash.
   * @param  number $seed  Positive integer only
   * @return number 32-bit positive integer hash
   */
  public static function hash3_int(string $key, int $seed=0) : int {
    $key  = array_values(unpack('C*', $key));
    $klen = count($key);
    $h1   = $seed < 0 ? -$seed : $seed;
    $remainder = $i = 0;
    for ($bytes=$klen-($remainder=$klen&3) ; $i < $bytes ; ) {
      $k1 = $key[$i]
        | ($key[++$i] << 8)
        | ($key[++$i] << 16)
        | ($key[++$i] << 24);
      ++$i;
      $k1  = (((($k1 & 0xffff) * 0xcc9e2d51) + ((((($k1 >= 0 ? $k1 >> 16 : (($k1 & 0x7fffffff) >> 16) | 0x8000)) * 0xcc9e2d51) & 0xffff) << 16))) & 0xffffff